openapi: 3.0.0
info:
  title: User Orders Web API
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Development server

paths:
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: User login to get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials

  /api/orders:
    get:
      tags:
        - Orders
      summary: Get order history for authenticated user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of user's orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponse'
        '401':
          description: Unauthorized

  /api/orders/{id}:
    get:
      tags:
        - Orders
      summary: Get order details by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsResponse'
        '404':
          description: Order not found

  /api/admin/users/{userId}:
    get:
      tags:
        - Admin
      summary: Get user statistics (admin only)
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStatsResponse'
        '403':
          description: Forbidden

  /api/admin/orders:
    get:
      tags:
        - Admin
      summary: Filter orders (admin only)
      parameters:
        - in: query
          name: minPrice
          schema:
            type: number
            format: decimal
        - in: query
          name: maxPrice
          schema:
            type: number
            format: decimal
        - in: query
          name: createdAfter
          schema:
            type: string
            format: date-time
        - in: query
          name: productId
          schema:
            type: integer
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Filtered orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminOrderResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string

    OrderResponse:
      type: object
      properties:
        id:
          type: integer
        totalPrice:
          type: number
          format: decimal
        productsCount:
          type: integer
        orderDate:
          type: string
          format: date-time

    OrderDetailsResponse:
      allOf:
        - $ref: '#/components/schemas/OrderResponse'
        - type: object
          properties:
            products:
              type: array
              items:
                $ref: '#/components/schemas/ProductResponse'

    ProductResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: decimal
        quantity:
          type: integer

    UserStatsResponse:
      type: object
      properties:
        userId:
          type: integer
        totalOrders:
          type: integer
        totalSpent:
          type: number
          format: decimal

    AdminOrderResponse:
      allOf:
        - $ref: '#/components/schemas/OrderResponse'
        - type: object
          properties:
            userId:
              type: integer
            userEmail:
              type: string

security:
  - BearerAuth: []